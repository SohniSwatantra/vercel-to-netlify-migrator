# Ultra-secure isolated Docker image
# This runs the migration in a completely sandboxed environment
# with no network access and minimal privileges

FROM node:18-alpine AS builder

WORKDIR /build

# Build web UI
COPY web/package*.json ./web/
WORKDIR /build/web
RUN npm ci
COPY web/ ./
RUN npm run build

# Final stage - minimal runtime
FROM nginx:alpine AS isolated-runtime

# Security hardening
RUN apk add --no-cache \
    curl \
    && rm -rf /var/cache/apk/*

# Copy only the built static files
COPY --from=builder /build/web/dist /usr/share/nginx/html

# Custom nginx config for security
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
    echo '    listen 80;' >> /etc/nginx/conf.d/default.conf && \
    echo '    server_name _;' >> /etc/nginx/conf.d/default.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    index index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Security headers' >> /etc/nginx/conf.d/default.conf && \
    echo '    add_header X-Frame-Options "SAMEORIGIN" always;' >> /etc/nginx/conf.d/default.conf && \
    echo '    add_header X-Content-Type-Options "nosniff" always;' >> /etc/nginx/conf.d/default.conf && \
    echo '    add_header X-XSS-Protection "1; mode=block" always;' >> /etc/nginx/conf.d/default.conf && \
    echo '    add_header Referrer-Policy "no-referrer-when-downgrade" always;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
    echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '}' >> /etc/nginx/conf.d/default.conf

# Create non-root user
RUN addgroup -g 1001 -S migrator && \
    adduser -S migrator -u 1001 && \
    chown -R migrator:migrator /usr/share/nginx/html && \
    chown -R migrator:migrator /var/cache/nginx && \
    chown -R migrator:migrator /var/log/nginx && \
    chown -R migrator:migrator /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R migrator:migrator /var/run/nginx.pid

USER migrator

EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080 || exit 1

CMD ["nginx", "-g", "daemon off;"]
